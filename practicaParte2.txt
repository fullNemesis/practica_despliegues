Despliegue de aplicaciones web Curso 24-25
1
Práctica 2
Desarrollo de una aplicación completa para la para la gestión de una clínica de fisioterapia con Express, Mongoose y un motor de plantillas.
Parte 2. Formularios y validación
En esta segunda parte de la práctica vamos a incorporar algunos formularios a la web.
2.1 Pasos previos
Como paso previo, vamos a modificar los esquemas de pacientes y fisios:
•
Añade en ambos un campo imagen, de tipo texto, no obligatorio, por si se quiere adjuntar una imagen (sólo una) del paciente o del fisioterapeuta.
•
Instala multer para gestionar la subida de archivos en el servidor, y añade la configuración de multer para manejar las subidas de imágenes.
o
Crea la carpeta public/uploads dentro del proyecto para almacenar las imágenes subidas.
o
Asegúrate de que el servidor sirva esta carpeta como archivos estáticos
•
Define en cada validador (required, min, max...) un mensaje de error asociado, como se ha visto en clase para los mecanismos de validación empleando Mongoose.
2.2 Definición de formularios
Incorporaremos al proyecto los siguientes formularios:
•
Registro de pacientes (patiend_add.njk):

Implementa un formulario para dar de alta nuevos pacientes en la aplicación y su usuario asociado. Debe mostrar todos los campos del paciente (excepto ID), y campos para su login y su password.

La funcionalidad incluirá tanto la interfaz de usuario (vista) como la creación y modificación de los servicios necesarios en el enrutador para gestionar la creación de pacientes:

Servicio GET /patients/new: renderiza el formulario de alta de pacientes

Servicio POST /patients: procesa los datos enviados desde el formulario registrando tanto al paciente como al usuario asociado en la base de datos. Si ocurre algún error (como datos inválidos o duplicados), redirige al formulario con mensajes de error específicos.
Despliegue de aplicaciones web Curso 24-25
2

Añade un enlace en el menú principal (menu.njk) que permita acceder al formulario de alta de nuevos pacientes.
•
Edición de los datos de un paciente (patient_edit.njk):

Implementa un formulario para permitir la modificación de los datos de un paciente existente en la aplicación, excepto su ID, su login y su password. Se deben cargar en el formulario los datos actuales del paciente y permitir su edición.

La funcionalidad incluye tanto la interfaz de usuario (vista) como la creación y modificación de los servicios necesarios en el enrutador para gestionar la actualización de pacientes.

Servicio GET /patients/:id/edit: renderiza el formulario con los datos actuales del paciente identificado por su ID

Servcio PUT /patients/:id: procesa los datos enviados desde el formulario y actualiza los registros del paciente en la base de datos.
•
Si la actualización se ha realizado con éxito, se debe redirigir a la vista de detalles del paciente actualizado.
•
Si ocurre algún error (como datos inválidos), redirige al formulario mostrando mensajes de error específicos.

Este formulario debe ser accesible:

Desde el listado de pacientes (patients_list.njk): cada paciente listado incluirá un enlace a su formulario de edición.

Desde la vista de detalles del paciente (patient_detail.njk): incluye un botón o enlace adicional que redirija al formulario de edición del paciente.
•
Buscador de pacientes por apellido

Implementa un formulario para buscar pacientes registrados en el sistema utilizando su apellido.

La funcionalidad incluirá tanto la interfaz de usuario (vista) como la integración con el servicio correspondiente:

Servicio GET /patients/find: procesa la búsqueda enviando un parámetro surname en la consulta y devuelve los pacientes que coincidan con el apellido proporcionado. Si no se especifica un apellido, devuelve un listado completo.
•
Si no se encuentran pacientes que coincidan, renderiza la vista de error con un mensaje personalizado como: "No se encontraron pacientes asociados al apellido ingresado."
•
Si ocurre un error en el servidor, redirige a una página de error con otro mensaje personalizado como: "Hubo un problema al procesar la búsqueda. Inténtelo más tarde."
Despliegue de aplicaciones web Curso 24-25
3

El buscador de pacientes estará disponible tanto en el menú principal (menu.njk) como en la vista de listado general de pacientes (patients_list.njk), optimizando así su accesibilidad y utilidad.
•
Registro de fisios

Implementa un formulario para registrar nuevos fisioterapeutas en la aplicación. Este formulario permitirá asociar al fisioterapeuta con un usuario del sistema, por lo que debe incluir también campos para un login y una contraseña.

La funcionalidad incluirá tanto la interfaz de usuario (vista) como la creación y modificación de los servicios necesarios en el enrutador para gestionar la creación de fisioterapeutas:

Servicio GET /physios/new: renderiza el formulario de alta de fisioterapeutas.

Servicio POST /physios: procesa los datos enviados desde el formulario y registra al fisioterapeuta y su usuario asociado en la base de datos.
•
Si la operación se ha realiza con éxito, se debe redirigir a la vista que muestra el listado de fisios (physios_list.njk)
•
Si ocurre algún error (como datos inválidos o duplicados), redirige al formulario con mensajes de error específicos.

Añade un enlace en el menú principal (menu.njk) que permita acceder al formulario de alta de nuevos fisioterapeutas.
•
Editar la información de un fisioterapeuta

Implementa un formulario para editar la información de un fisioterapeuta existente, excepto su ID, su login y su password. Este formulario se cargará con los datos actuales del fisioterapeuta para que puedan ser modificados.

La funcionalidad incluirá tanto la interfaz de usuario (vista) como los servicios necesarios para gestionar las actualizaciones:

Servicio GET /physios/:id/edit: renderiza el formulario de edición con los datos actuales del fisioterapeuta.

Servicio PUT /physios/:id: procesa los datos enviados desde el formulario y actualiza la información del fisioterapeuta en la base de datos.
•
Si la operación se ha realizado con éxito, se debe redirigir a la vista que muestra la información detallada de dicgo especialista (physio_detail.njk)
•
Si ocurre algún error, redirige al formulario con mensajes de error.

Este formulario debe ser accesible:
Despliegue de aplicaciones web Curso 24-25
4

Desde el listado de fisios (physios_list.njk): cada fisio listado incluirá un enlace a su formulario de edición.

Desde la vista de detalles del fisio (physio_detail.njk): incluye un botón o enlace adicional que redirija al formulario de edición del fisioterapeuta.
•
Buscador de fisios por especialidad

Implementa un formulario para buscar fisioterapeutas por especialidad, permitiendo filtrar resultados del listado según el criterio ingresado.

La funcionalidad incluirá tanto la interfaz de usuario (vista) como la interacción con el servicio correspondiente:

Servicio GET /physios/find: procesa la búsqueda por especialidad y devuelve los fisioterapeutas que coincidan con el criterio ingresado.
•
Si no se encuentran fisioterapeutas, renderiza la vista de error con un mensaje personalizado como: "No se encontraron fisioterapeutas con la especialidad indicada."

El buscador de fisios estará disponible tanto en el menú principal (menu.njk) como en la vista de listado general de fisios (physios_list.njk), optimizando así su accesibilidad y utilidad.
•
Buscador de expedientes médicos por apellido del paciente

Implementa un formulario para buscar expedientes médicos asociados a pacientes por apellido. Este formulario permitirá a los usuarios filtrar los resultados y encontrar los expedientes relacionados con un criterio específico.

La funcionalidad incluirá tanto la interfaz de usuario (vista) como la interacción con el servicio correspondiente:

Servicio GET /records/find: procesa la búsqueda enviando un parámetro surname en la consulta y devuelve los expedientes médicos que coincidan con el apellido proporcionado.
•
Si no se encuentran expedientes médicos que coincidan, renderiza la vista de error con un mensaje personalizado como: "No se encontraron expedientes asociados al apellido ingresado."
•
Si ocurre un error en el servidor, redirige a una página de error con otro mensaje personalizado como: "Hubo un problema al procesar la búsqueda. Inténtelo más tarde."

El buscador de expedientes estará disponible tanto en el menú principal (menu.njk) como en la vista de listado general de expedientes (records_list.njk), optimizando así su accesibilidad y utilidad.
•
Registro de expedientes médicos
Despliegue de aplicaciones web Curso 24-25
5

Implementa un formulario para registrar nuevos expedientes médicos en la aplicación. Este formulario permitirá asociar el expediente a un paciente ya existente.

La funcionalidad incluirá tanto la interfaz de usuario (vista) como la creación y modificación de los servicios necesarios en el enrutador para gestionar la creación de expedientes:

Servicio GET /records/new: renderiza el formulario para crear un nuevo expediente.

Servicio POST /records: procesa los datos enviados desde el formulario y registra el expediente médico en la base de datos.
•
Si el registro se ha realizado con éxito, se debe redirigir a la vista que muestra el listado de expedientes médicos (records_list.njk)
•
Si ocurre algún error (como un ID de paciente inexistente o datos faltantes), redirige al formulario con mensajes de error específicos.

Añade un enlace en el menú principal (menu.njk) que permita acceder al formulario de alta de nuevos expedientes.
•
Añadir citas a un expediente médico

Crea un formulario para registrar citas en un expediente médico existente. Este formulario debe permitir especificar los datos relevantes para la nueva cita.

La funcionalidad incluirá tanto la interfaz de usuario (vista) como la creación y modificación de los servicios necesarios en el enrutador para gestionar la creación de citas:

Servicio GET /records/:id/appointments/new: renderiza el formulario para añadir una cita a un expediente existente.

Servicio POST /records/:id/appointments: procesa los datos enviados desde el formulario y registra la cita en la base de datos.
•
Si la cita se ha añadido correctamente, se debe redirigir a la vista que muestra el detalle del expediente (record_detail.njk)
•
Si ocurre algún error, se redirige al formulario con mensajes de error específicos.

El enlace para añadir citas a un expediente médico estará disponible tanto en la vista de detalles del expediente (record_detail.njk )como en el listado general de expedientes (records_list.njk).